{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/SectionTitle/SectionTitle.jsx","components/App/App.jsx","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","countGood","countNeutral","countbBad","className","type","onClick","SectionTitle","title","App","state","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAwBeA,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,aCKOC,EAfS,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClD,OACE,qCACE,wBAAQC,UAAU,MAAMC,KAAK,SAASC,QAASL,EAA/C,kBAGA,wBAAQG,UAAU,MAAMC,KAAK,SAASC,QAASJ,EAA/C,qBAGA,wBAAQE,UAAU,MAAMC,KAAK,SAASC,QAASH,EAA/C,qBCDSI,EARM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,mCACE,oBAAIJ,UAAU,QAAd,SAAuBI,OCEvBC,E,4MACJC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,gCAAkC,WAChC,MAA+B,EAAKD,MAA5Bf,EAAR,EAAQA,KACFG,EAAQH,EADd,EAAcC,QAAd,EAAuBC,IAGvB,OADee,KAAKC,MAAOlB,EAAOG,EAAS,M,EAI7CgB,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQf,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBI,UAAY,WACV,EAAKc,UAAS,SAAAL,GAAK,MAAK,CACtBf,KAAMe,EAAMf,KAAO,O,EAIvBO,aAAe,WACb,EAAKa,UAAS,SAAAL,GAAK,MAAK,CACtBd,QAASc,EAAMd,QAAU,O,EAI7BO,UAAY,WACV,EAAKY,UAAS,SAAAL,GAAK,MAAK,CACtBb,IAAKa,EAAMb,IAAM,O,EAGrBiB,mBAAqB,WAEnB,OADY,EAAKJ,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,4CAGhE,WACE,MAA+BmB,KAAKN,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKO,UAAU,YAAf,UACE,cAAC,EAAD,CAAcI,MAAM,0BACpB,cAAC,EAAD,CACEP,UAAWe,KAAKf,UAChBC,aAAcc,KAAKd,aACnBC,UAAWa,KAAKb,YAEjBa,KAAKF,qBAAuB,EAC3B,+BACE,cAAC,EAAD,CAAcN,MAAM,eACpB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKF,qBACZf,mBAAoBiB,KAAKL,uCAI7B,yD,GA9DQM,aAqEHR,I,MCnEfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fd0f5437.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","const FeedbackOptions = ({ countGood, countNeutral, countbBad }) => {\r\n  return (\r\n    <>\r\n      <button className=\"btm\" type=\"button\" onClick={countGood}>\r\n        Good\r\n      </button>\r\n      <button className=\"btm\" type=\"button\" onClick={countNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button className=\"btm\" type=\"button\" onClick={countbBad}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n","const SectionTitle = ({ title }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">{title}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionTitle;\r\n","import { Component } from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport SectionTitle from '../SectionTitle/SectionTitle';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    const total1 = Math.round((good / total) * 100);\n    return total1;\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countGood = () => {\n    this.setState(state => ({\n      good: state.good + 1,\n    }));\n  };\n\n  countNeutral = () => {\n    this.setState(state => ({\n      neutral: state.neutral + 1,\n    }));\n  };\n\n  countbBad = () => {\n    this.setState(state => ({\n      bad: state.bad + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const sum = this.state.good + this.state.neutral + this.state.bad;\n    return sum;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"conteiner\">\n        <SectionTitle title=\"Please leave feedback\" />\n        <FeedbackOptions\n          countGood={this.countGood}\n          countNeutral={this.countNeutral}\n          countbBad={this.countbBad}\n        />\n        {this.countTotalFeedback() > 0 ? (\n          <ul>\n            <SectionTitle title=\"Statistics\" />\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </ul>\n        ) : (\n          <p>No feetback given</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App.jsx';\n//import 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}